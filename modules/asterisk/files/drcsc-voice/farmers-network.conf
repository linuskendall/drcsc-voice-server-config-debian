;# -*- mode: asterisk -*-
;# vi: set ft=asterisk :
[farmers-network]
exten => s,1,Answer(500)
  same => n,agi(googletts.agi,"Welcome to DRCSC voice system",en)
  same => n,MYSQL(Connect connid localhost drcsc drcsc drcsc)
  same => n,GotoIf($["${connid}" = ""]?e,1)
  same => n,MYSQL(Query resultid ${connid} SELECT id FROM users WHERE callerid='${CALLERID(num)}') 
  same => n,MYSQL(Fetch fetchid ${resultid} userid) ; Read user id into a local variable
  same => n,MYSQL(Clear ${resultid})
  same => n,GosubIf($["${fetchid}" = "0"]?farmers-network-registration,s,1) ; No user id, then go to registration 
  same => n,GotoIf($["${userid}" = ""]?e,1) ; Check for error
  same => n(loop),agi(googletts.agi,"You are at the main menu",en,0123)
  same => n,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n(selection),agi(googletts.agi,"To record a message press 1",en,0123)
  same => n,agi(googletts.agi,"To hear new messages and replies press 2",en,0123)
  same => n,agi(googletts.agi,"To listen to your messages and replies press 3",en,0123)
  same => n,agi(googletts.agi,"If you need help press 0",en,0123)
  same => n,WaitExten()

; Help
exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"You are at the main menu. Please press a button for any of the options.",en)
  same => n,Goto(s,selection) 

; Record a new message
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-record,s,1)
  same => n,Goto(s,loop)

; Listen to messages
exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-listen,s,1)
  same => n,Goto(s,loop)

; Listen to my own messges
exten => 3,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-own,s,1)
  same => n,Goto(s,loop)

exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(s,loop)
 
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(s,loop)

exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(an-error-has-occurred)
  same => n,Hangup

exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Disconnect ${connid})

; Record a new message to channel
[farmers-network-record]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${userid}" = ""]?farmers-network,e,1)
  same => n,agi(googletts.agi,"Record your message after the beep and end with star",en)
  same => n,Playback(silence/2)
  same => n,Playback(beep)
  same => n,Record(/var/spool/asterisk/messages/recording-%d:ulaw,10,0,t) ; 5 second silence, no maximum, alternate delimiter "*"
  same => n,MYSQL(Query resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto=-1, user_id='${userid}', filename='${RECORDED_FILE}', dt=NOW())
  same => n,agi(googletts.agi,"Your message has been recorded.",en)
  same => n,Return()

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang up
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(u,1)
  same => n,Goto(farmers-network,h,1)

; Hear all current messages on channel
[farmers-network-listen]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-new-messages,s,1) ; First check for new messages
  same => n,GotoIf($["${GOSUB_RETVAL}" = "1"]?0,1) ; If error, go to old messages
  same => n,Goto(9,1)

exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"To listen to old messages press 1",en,019)
  same => n,agi(googletts.agi,"To return to main menu press 9",en,019)
  same => n,agi(googletts.agi,"For help press 0",en,019)
  same => n,WaitExten()

exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-old-messages,s,1)
  same => n,Goto(9,1)

exten => 9,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Return()
  
; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1) 

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

[farmers-network-new-messages]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid != ${CALLERID(num)} AND id NOT IN (SELECT message_id FROM listened WHERE user_id='${userid}')) 
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} NEW_COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,GotoIf($[${NEW_COUNT} > 0]?1,1) 
  same => n,agi(googletts.agi,"There are no new messages",en)
  same => n,Return(1)

; Playing new messages
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"Playing all new messages",en)
  same => n,agi(googletts.agi,"There are",en)
  same => n,SayNumber(${NEW_COUNT})
  same => n,agi(googletts.agi,"new messages",en)
  ; Fetch all non reply messages
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto=-1 AND callerid != ${CALLERID(num)} AND id NOT IN (SELECT message_id FROM listened WHERE user_id='${userid}') ORDER BY dt DESC) 
  same => n,Gosub(farmers-network-listen-all,s,1) 
  same => n,agi(googletts.agi,'No more new messages.',en,0129)
  same => n,Goto(0,1)

exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-old-messages,s,1)
  same => n,GotoIf($["${GOSUB_RETVAL}" = "1"]?0,1) ; If error then go to menu
  same => n,Gosub(r,1) ; mark messages as read
  same => n,Return() ; Otherwise return

exten => 9,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(r,1) ; mark emssages as read
  same => n,Return()

exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'To hear new messages again press 1',en,0129)
  same => n,agi(googletts.agi,'To hear old messages press 2',en,0129)
  same => n,agi(googletts.agi,'To return to main menu press 9',en,0129)
  same => n,WaitExten()

; Mark all messages as read 
exten => r,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,While($[${MESSAGEN} != 0])
  same => n,MYSQL(Query resultid ${connid} INSERT INTO listened SET user_id='${userid}', message_id='${$[MESSAGEID_${MESSAGEN}]}')
  same => n,Set(MESSAGEN=$[${MESSAGEN}-1])
  same => n,EndWhile
  same => n,Return()

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1) 

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

[farmers-network-old-messages]
; Listen to already listened to messages
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid != ${CALLERID(num)} AND id IN (SELECT message_id FROM listened WHERE user_id='${userid}')) 
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} OLD_COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,GotoIf($[${OLD_COUNT} > 0]?1,1) 
  same => n,agi(googletts.agi,"There are no messages",en)
  same => n,Return(1)

exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"Playing all old messages",en)
  same => n,agi(googletts.agi,"There are",en)
  same => n,SayNumber(${OLD_COUNT})
  same => n,agi(googletts.agi,"old messages",en)
 ; Fetch all non reply messages
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto=-1 AND callerid != ${CALLERID(num)} AND id IN (SELECT message_id FROM listened WHERE user_id='${userid}') ORDER BY dt DESC) 
  same => n,Gosub(farmers-network-listen-all,s,1) 
  same => n,agi(googletts.agi,'No more messages.',en,0129)
  same => n,Goto(0,1)

exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-new-messages,s,1)
  same => n,GotoIf($["${GOSUB_RETVAL}" = "1"]?0,1) ; If error then go to menu
  same => n,Return() ; Otherwise return

exten => 9,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Return()

exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'To hear messages again press 1',en,0129)
  same => n,agi(googletts.agi,'To hear new messages press 2',en,0129)
  same => n,agi(googletts.agi,'To return to main menu press 9',en,0129)
  same => n,WaitExten()

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1) 

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

[farmers-network-listen-all]
; Play messages from a previously fetched list
; Requires a resultid to have been fetched
; Sets variables MESSAGEN (number of messages, MESSAGEID_n = id of message number n
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"To listen to replies for any message, press 1", en)
  same => n,agi(googletts.agi,"For help and more options,press 0", en)
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,Set(MESSAGEN=0)
  same => n(fetch),MYSQL(Fetch fetchid ${resultid} id callerid filename) ; loop begin
  same => n,GotoIf($[${fetchid}]?:endresult)
  same => n,Set(MESSAGEN=$[${MESSAGEN}+1])
  same => n,Set(MESSAGEID_${MESSAGEN}=${id})
  same => n,Gosub(farmers-network-listen-single,s,1)
  same => n,Goto(fetch) ; loop end
  same => n(endresult),MYSQL(Clear ${resultid})
  same => n,Return()

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1) 

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

[farmers-network-listen-single]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Background(vm-message)
  same => n,SayNumber(${MESSAGEN}) ;SayNumber(${callerid})
  same => n,Background(${filename})  ; The user can dial any input here
  same => n,Background(silence/3) ; Setting silence to 3 seconds
  same => n(beep),Playback(beep)
  same => n,Return()

; Help
exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"You are listening to a message",en)
  same => n,agi(googletts.agi,"To listen to replies press 1",en,012345)
  same => n,agi(googletts.agi,"To record a reply press 2",en,012345),
  same => n,agi(googletts.agi,"To repeat message press 3",en,012345)
  same => n,agi(googletts.agi,"To skip message press 4",en,012345)
  same => n,agi(googletts.agi,"To delete the message, press 5",en,012345)
  same => n,Goto(s,1)

; Listen to replies
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-replies,s,1)
  same => n,Goto(s,1)

; Record a reply
exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-record-reply,s,1)
  same => n,Goto(s,1)

; Listen again
exten => 3,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"Repeating",en)
  same => n,Goto(s,1) ; play the same result again

; Skip
exten => 4,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"Skipping",en)
  same => n,Goto(s,beep) ; skip to next

; Delete
; TODO: check for permissions to delete
exten => 5,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${id}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET archived=1 WHERE id=${id} AND user_id=${userid}) ; TODO AND callerid = ${CALLERID(num)}Archive message only if the callerid matches
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET archived=1 WHERE replyto=${id}) ; Archive all replies
  same => n,Playback(vm-deleted)
  same => n,Goto(s,fetch) ; Go to next

; Permissions problem
exten => p,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"You can only delete your own messages",en)
  same => m,Goto(s,1)

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1) 

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

; Read all the users messages
[farmers-network-own]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Query resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto = -1 AND callerid = '${CALLERID(num)}') ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch fetchid ${resultid} COUNT)
  same => n,MYSQL(Clear ${resultid})
  same => n,GotoIf($[${COUNT} > 0]?1,1) 
  same => n,agi(googletts.agi,"You have not posted any messages",en)
  same => n,Return(1)

; Playing new messages
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'Playing your messages. Press 0 for help.', en)
  same => n,agi(googletts.agi,"You have posted",en)
  same => n,SayNumber(${COUNT})
  same => n,agi(googletts.agi,"messages",en)
  ; Fetch all non reply messages
  same => n,MYSQL(Query resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto=-1 AND callerid = '${CALLERID(num)}' ORDER BY dt DESC) ; Fetch all non reply messages
  same => n,Gosub(farmers-network-listen-all,s,1) 
  same => n,agi(googletts.agi,'No more new messages.',en,0129)
  same => n,Goto(0,1)

; Return to main menu
exten => 9,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Return()

; Help menu
exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'To hear your messages again press 1',en,0129)
  same => n,agi(googletts.agi,'To return to main menu press 9',en,0129)
  same => n,WaitExten()

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout, play help again
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1)

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

; Record a reply
[farmers-network-record-reply]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${id}" = ""]?farmers-network,e,1)
  same => n,agi(googletts.agi,"You are recording a reply",en)
  same => n,agi(googletts.agi,"After the beep, record your reply and end with star",en)
  same => n,Playback(silence/2)
  same => n,Playback(beep)
  same => n,Record(/var/spool/asterisk/messages/recording-%d:ulaw,10,0,t) ; 5 second silence, no maximum, alternate delimiter "*"
  same => n,MYSQL(Query reply_resultid ${connid} INSERT INTO messages SET callid='${UNIQUEID}', callerid='${CALLERID(num)}', replyto='${id}', user_id='${userid}', filename='${RECORDED_FILE}', dt=NOW())
  same => n,Gosub(farmers-network-notify-reply,s,1)
  same => n,agi(googletts.agi,'Your reply has been recorded',en)
  same => n,Return()

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(s,1) ; return to start

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

; Listen to replies 
[farmers-network-replies]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${id}" = ""]?farmers-network,e,1) ; Ensure we have an id
  same => n,MYSQL(Query play_reply_resultid ${connid} SELECT COUNT(*) FROM messages WHERE replyto='${id}') ; Fetch all top level messages (not replies)
  same => n,GotoIf($["${play_reply_resultid}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Fetch play_reply_fetchid ${play_reply_resultid} PLAY_REPLY_COUNT)
  same => n,MYSQL(Clear ${play_reply_resultid})
  same => n,agi(googletts.agi,"There are",en)
  same => n,SayNumber(${PLAY_REPLY_COUNT})
  same => n,agi(googletts.agi,'replies',en)
  same => n,Set(PLAY_REPLY_MESSAGEN=0)
  same => n,MYSQL(Query play_reply_resultid ${connid} SELECT id, callerid, filename FROM messages WHERE replyto='${id}' ORDER BY dt DESC) ; Fetch all non reply messages
  same => n,GotoIf($["${play_reply_resultid}" = ""]?farmers-network,e,1)
  same => n(fetch),MYSQL(Fetch play_reply_fetchid ${play_reply_resultid} reply_id reply_callerid reply_filename)
  same => n,GotoIf($[${play_reply_fetchid}]?:endresult)
  same => n,Set(PLAY_REPLY_MESSAGEN=$[${PLAY_REPLY_MESSAGEN}+1])
  same => n(play),agi(googletts.agi,'Reply',en,01234)
  same => n,SayNumber(${PLAY_REPLY_MESSAGEN}) ;SayNumber(${callerid})
  same => n,Background(${reply_filename})  ; The user can dial any input here
  same => n,Background(silence/3) ; Setting silence to 3 seconds
  same => n(beep),Playback(beep)
  same => n,Goto(fetch)
  same => n,agi(googletts.agi,'No more replies.',en)
  same => n(endresult),MYSQL(Clear ${play_reply_resultid})
  same => n,agi(googletts.agi,'To hear replies again press 1',en)
  same => n,agi(googletts.agi,'To record a reply press 2',en)
  same => n,agi(googletts.agi,'To go back to the message press 3.',en)
  same => n,Read(LNC,,1)
  same => n,GotoIf($["${LNC}"="1"]?s,1) ; go back and relisten to all replies
  same => n,GotoIf($["${LNC}"="2"]?2,1) ; record a new reply
  same => n,Return() ; anything else will simply return

; Help
exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,"You are listening to replies to a message.",en)
  same => n,agi(googletts.agi,"To record a new reply press 2.",en) 
  same => n,agi(googletts.agi,"To repeat the reply press 3.",en) 
  same => n,agi(googletts.agi,"To skip the reply press 4.",en) 
  same => n,agi(googletts.agi,"If it is your reply press 5 to delete the reply.",en) 
  same => n,Goto(s,play)

; Record a reply
exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Gosub(farmers-network-record-reply,s,1)
  same => n,Goto(s,endresult)

; Listen again
exten => 3,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(s,play) ; play the same result again

; Skip
exten => 4,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(s,fetch) ; skip to next

; Delete
exten => 5,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${id}" = ""]?farmers-network,e,1)
  same => n,MYSQL(Query resultid ${connid} UPDATE messages SET archived=1 WHERE id=${id} AND callerid = ${CALLERID(num)}) ; Fetch all non reply messages
  same => n,Playback(vm-deleted)
  same => n,Goto(s,fetch) ; Go to next

; Invalid option, play help
exten => i,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(option-is-invalid)
  same => n,Goto(0,1)
 
; Timeout
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1)

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

; Notify the owner of a new reply
[farmers-network-notify-reply]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,GotoIf($["${id}" = ""]?farmers-network,e,1) ; Ensure we have an id
  same => n,NoOp()  ; -- not implemented
  same => n,Return()

; Register a new user
[farmers-network-registration]
exten => s,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'Using this system you can ask and answer questions to and from other farmers',en)
  same => n,agi(googletts.agi,'If you ever need any help press the button 0 on your phone',en)
  same => n,agi(googletts.agi,'Before starting we would like to know where you are from',en)
  same => n,agi(googletts.agi,'If you are from Purulia press 1',en,012)
  same => n,agi(googletts.agi,'If you are from South 24 Parganas press 2',en,012)
  same => n,WaitExten()

exten => 0,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'Use the buttons on your phone to make a choice',en),
  same => n,Goto(s,3)
  
exten => 1,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'You have chosen Purulia',en),
  same => n,agi(googletts.agi,'To confirm and go to the main menu press 1',en)
  same => n,agi(googletts.agi,'If you want to change your choice press 2',en)
  same => n,Set(LOCATION=purulia)
  same => n,Read(LNC,,1)
  same => n,GotoIf($["${LNC}"="1"]?u,1) 
  same => n,Goto(s,3)

exten => 2,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,agi(googletts.agi,'You have chosen South 24 Parganas', en)
  same => n,agi(googletts.agi,'To confirm and go to the main menu press 1',en)
  same => n,agi(googletts.agi,'If you want to change your choice press 2',en)
  same => n,Set(LOCATION=s24pgs)
  same => n,Read(LNC,,1)
  same => n,GotoIf($["${LNC}"="1"]?u,1) 
  same => n,Goto(s,3)

; Save the choice
exten => u,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,MYSQL(Query resultid ${connid} INSERT INTO users SET callerid='${CALLERID(num)}', location='${LOCATION}')
  same => n,MYSQL(Query resultid ${connid} SELECT id FROM users WHERE callerid='${CALLERID(num)}') 
  same => n,MYSQL(Fetch fetchid ${resultid} userid)
  same => n,Return()

; Timeout
exten => t,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Playback(are-you-still-there)
  same => n,Goto(0,1)

; Error
exten => e,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,e,1)

; Hang-up, jump to cleanup
exten => h,1,Gosub(log,s,1(${CONTEXT}, ${PRIORITY}, ${EXTEN}))
  same => n,Goto(farmers-network,h,1)

[log]
exten => s,1,MYSQL(Query resultid ${connid} INSERT INTO log SET dt=NOW(), callid='${UNIQUEID}', callerid='${CALLERID(num)}', user_id='${userid}', context='${ARG1}', exten='${ARG2}', prio='${ARG3}', action='${ARG4}', action_params='${ARG5}')
  same => n,Return()
